services:

  db:
    image: postgres:13.2
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 1s
      retries: 20
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database-data:/var/lib/postgresql/data
    
  redis:
    image: redis:6.2.4
    ports:
      - "6385:6379"

  rabbitmq:
    image: rabbitmq:3.13.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    # healthcheck:
    #   test: rabbitmq-diagnostics -q ping
    #   interval: 30s
    #   timeout: 30s
    #   retries: 3


  bot:
    build:
      dockerfile: Dockerfile
      context: .
    command: uvicorn src.app:create_app --factory --host 0.0.0.0 --port 8001 --workers=1
    ports:
      - "8080:8001"
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy
    volumes:
      - .:/code

  consumer:
    build:
      dockerfile: Dockerfile
      context: .
    command: uvicorn consumer.web_app:create_app --factory --host 0.0.0.0 --port 8010 --workers=1
    ports:
      - "8090:8010"
    depends_on:
      rabbitmq:
         condition: service_healthy
    volumes:
       - .:/code

volumes:
  database-data:
    driver: local
